from _typeshed import Incomplete
from redis.utils import str_if_bytes as str_if_bytes

def timestamp_to_datetime(response): ...
def parse_debug_object(response): ...
def parse_info(response): ...
def parse_memory_stats(response, **kwargs): ...

SENTINEL_STATE_TYPES: Incomplete

def parse_sentinel_state(item): ...
def parse_sentinel_master(response): ...
def parse_sentinel_state_resp3(response): ...
def parse_sentinel_masters(response): ...
def parse_sentinel_masters_resp3(response): ...
def parse_sentinel_slaves_and_sentinels(response): ...
def parse_sentinel_slaves_and_sentinels_resp3(response): ...
def parse_sentinel_get_master(response): ...
def pairs_to_dict(response, decode_keys: bool = ..., decode_string_values: bool = ...): ...
def pairs_to_dict_typed(response, type_info): ...
def zset_score_pairs(response, **options): ...
def sort_return_tuples(response, **options): ...
def parse_stream_list(response): ...
def pairs_to_dict_with_str_keys(response): ...
def parse_list_of_dicts(response): ...
def parse_xclaim(response, **options): ...
def parse_xautoclaim(response, **options): ...
def parse_xinfo_stream(response, **options): ...
def parse_xread(response): ...
def parse_xread_resp3(response): ...
def parse_xpending(response, **options): ...
def parse_xpending_range(response): ...
def float_or_none(response): ...
def bool_ok(response): ...
def parse_zadd(response, **options): ...
def parse_client_list(response, **options): ...
def parse_config_get(response, **options): ...
def parse_scan(response, **options): ...
def parse_hscan(response, **options): ...
def parse_zscan(response, **options): ...
def parse_zmscore(response, **options): ...
def parse_slowlog_get(response, **options): ...
def parse_stralgo(response, **options): ...
def parse_cluster_info(response, **options): ...
def parse_cluster_nodes(response, **options): ...
def parse_geosearch_generic(response, **options): ...
def parse_command(response, **options): ...
def parse_command_resp3(response, **options): ...
def parse_pubsub_numsub(response, **options): ...
def parse_client_kill(response, **options): ...
def parse_acl_getuser(response, **options): ...
def parse_acl_log(response, **options): ...
def parse_client_info(value): ...
def parse_set_result(response, **options): ...
def string_keys_to_dict(key_string, callback): ...
