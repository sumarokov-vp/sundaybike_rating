from .. import fixtures
from _typeshed import Incomplete

class LastrowidTest(fixtures.TablesTest):
    run_deletes: str
    __backend__: bool
    __requires__: Incomplete
    @classmethod
    def define_tables(cls, metadata) -> None: ...
    def test_autoincrement_on_insert(self, connection) -> None: ...
    def test_last_inserted_id(self, connection) -> None: ...
    def test_native_lastrowid_autoinc(self, connection) -> None: ...

class InsertBehaviorTest(fixtures.TablesTest):
    run_deletes: str
    __backend__: bool
    @classmethod
    def define_tables(cls, metadata) -> None: ...
    def test_no_results_for_non_returning_insert(self, connection, style, executemany) -> None: ...
    def test_autoclose_on_insert(self, connection) -> None: ...
    def test_autoclose_on_insert_implicit_returning(self, connection) -> None: ...
    def test_empty_insert(self, connection) -> None: ...
    def test_empty_insert_multiple(self, connection) -> None: ...
    def test_insert_from_select_autoinc(self, connection) -> None: ...
    def test_insert_from_select_autoinc_no_rows(self, connection) -> None: ...
    def test_insert_from_select(self, connection) -> None: ...
    def test_insert_from_select_with_defaults(self, connection) -> None: ...

class ReturningTest(fixtures.TablesTest):
    run_create_tables: str
    __requires__: Incomplete
    __backend__: bool
    @classmethod
    def define_tables(cls, metadata) -> None: ...
    def test_explicit_returning_pk_autocommit(self, connection) -> None: ...
    def test_explicit_returning_pk_no_autocommit(self, connection) -> None: ...
    def test_autoincrement_on_insert_implicit_returning(self, connection) -> None: ...
    def test_last_inserted_id_implicit_returning(self, connection) -> None: ...
    def test_insertmanyvalues_returning(self, connection) -> None: ...
    def test_insert_w_floats(self, connection, metadata, sort_by_parameter_order, type_, value, do_rounding, multiple_rows) -> None: ...
    def test_imv_returning_datatypes(self, connection, metadata, sort_by_parameter_order, type_, value, multiple_rows) -> None: ...
