import datetime
import typing
from decimal import Decimal
from typing import Any, Callable, Optional, Type, Union

def str_to_datetime_processor_factory(regexp: typing.Pattern[str], type_: Callable[..., _DT]) -> Callable[[Optional[str]], Optional[_DT]]: ...
def to_decimal_processor_factory(target_class: Type[Decimal], scale: int) -> Callable[[Optional[float]], Optional[Decimal]]: ...
def to_float(value: Optional[Union[int, float]]) -> Optional[float]: ...
def to_str(value: Optional[Any]) -> Optional[str]: ...
def int_to_boolean(value: Optional[int]) -> Optional[bool]: ...
def str_to_datetime(value: Optional[str]) -> Optional[datetime.datetime]: ...
def str_to_time(value: Optional[str]) -> Optional[datetime.time]: ...
def str_to_date(value: Optional[str]) -> Optional[datetime.date]: ...
