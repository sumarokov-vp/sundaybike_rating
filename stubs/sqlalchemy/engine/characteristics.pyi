import abc
from .interfaces import DBAPIConnection as DBAPIConnection, Dialect as Dialect
from typing import Any, ClassVar

class ConnectionCharacteristic(abc.ABC, metaclass=abc.ABCMeta):
    transactional: ClassVar[bool]
    @abc.abstractmethod
    def reset_characteristic(self, dialect: Dialect, dbapi_conn: DBAPIConnection) -> None: ...
    @abc.abstractmethod
    def set_characteristic(self, dialect: Dialect, dbapi_conn: DBAPIConnection, value: Any) -> None: ...
    @abc.abstractmethod
    def get_characteristic(self, dialect: Dialect, dbapi_conn: DBAPIConnection) -> Any: ...

class IsolationLevelCharacteristic(ConnectionCharacteristic):
    transactional: ClassVar[bool]
    def reset_characteristic(self, dialect: Dialect, dbapi_conn: DBAPIConnection) -> None: ...
    def set_characteristic(self, dialect: Dialect, dbapi_conn: DBAPIConnection, value: Any) -> None: ...
    def get_characteristic(self, dialect: Dialect, dbapi_conn: DBAPIConnection) -> Any: ...
